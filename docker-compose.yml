version: '3.1'

services:

  # backend with database service
  backend-with-db:
    container_name: backend-with-db
    image: service-1-image
    
    command: npm run start
    environment:
      - APP_PORT=3000
      - DB_USER=postgres
      - DB_HOST=postgres-db
      - DB_NAME=backend-db
      - DB_PASSWORD=secretPwd
      - DB_PORT=5432
    # expose port 3000 access it from localhost:3000
    ports:
      - 3000:3000
    depends_on:
      - postgres
    volumes:
      - ./service-1/.:/usr/src/app/
      - ./service-1/node_modules:/usr/app/node_modules
    restart: unless-stopped
    networks:
      - backend

  # postgres db service
  postgres:
    container_name: postgres-db
    image: postgres:14.3
    ports:
      - 5436:5432
    environment:
      - POSTGRES_PASSWORD=secretPwd
      - POSTGRES_USER=postgres
      - POSTGRES_DB=backend-db
    restart: always
    networks:
      - backend
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./service-1/db/init_script.sql:/docker-entrypoint-initdb.d/init.sql

  # another backend with REST service
  backend-with-rest-api:
    container_name: backend-with-rest-api
    image: service-2-image
    
    command: npm run start
    environment:
      - APP_PORT=8000
      - BASE_URL=backend-with-db:3000
    # expose port 8000 access it from localhost:8000
    ports:
      - 8000:8000
    depends_on:
      - backend-with-db
    volumes:
      - ./service-2/.:/usr/src/app/
      - ./service-2/node_modules:/usr/app/node_modules
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    driver: bridge
